{"ast":null,"code":"import axios from 'axios';\n\n// Get API base URL from environment or use default\nconst getApiBaseUrl = () => {\n  // Check environment variable first\n  if (process.env.REACT_APP_API_BASE_URL) {\n    return process.env.REACT_APP_API_BASE_URL;\n  }\n  // Use the actual API server\n  return 'http://10.171.12.36:3010';\n};\nexport const apiClient = axios.create({\n  baseURL: getApiBaseUrl(),\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napiClient.interceptors.request.use(config => {\n  // Add any auth headers here if needed\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napiClient.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$response3, _error$response4;\n  // Handle common errors\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Handle unauthorized\n    console.error('Unauthorized access');\n  } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) >= 500) {\n    // Handle server errors\n    console.error('Server error:', error.response.data);\n  } else if (error.code === 'ERR_NETWORK') {\n    // Handle network errors (CORS, connection issues)\n    console.error('Network error - check CORS settings or server availability');\n  }\n  console.error('API Error:', {\n    message: error.message,\n    status: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status,\n    data: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data,\n    code: error.code\n  });\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","getApiBaseUrl","process","env","REACT_APP_API_BASE_URL","apiClient","create","baseURL","timeout","headers","interceptors","request","use","config","error","Promise","reject","response","_error$response","_error$response2","_error$response3","_error$response4","status","console","data","code","message"],"sources":["D:/work/komus/3pl-site/src/shared/api/client.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Get API base URL from environment or use default\r\nconst getApiBaseUrl = (): string => {\r\n  // Check environment variable first\r\n  if (process.env.REACT_APP_API_BASE_URL) {\r\n    return process.env.REACT_APP_API_BASE_URL;\r\n  }\r\n  // Use the actual API server\r\n  return 'http://10.171.12.36:3010';\r\n};\r\n\r\nexport const apiClient = axios.create({\r\n  baseURL: getApiBaseUrl(),\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    // Add any auth headers here if needed\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napiClient.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Handle common errors\r\n    if (error.response?.status === 401) {\r\n      // Handle unauthorized\r\n      console.error('Unauthorized access');\r\n    } else if (error.response?.status >= 500) {\r\n      // Handle server errors\r\n      console.error('Server error:', error.response.data);\r\n    } else if (error.code === 'ERR_NETWORK') {\r\n      // Handle network errors (CORS, connection issues)\r\n      console.error('Network error - check CORS settings or server availability');\r\n    }\r\n    \r\n    console.error('API Error:', {\r\n      message: error.message,\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      code: error.code\r\n    });\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n); "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,aAAa,GAAGA,CAAA,KAAc;EAClC;EACA,IAAIC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAE;IACtC,OAAOF,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAC3C;EACA;EACA,OAAO,0BAA0B;AACnC,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC;EACpCC,OAAO,EAAEN,aAAa,CAAC,CAAC;EACxBO,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,SAAS,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV;EACA,OAAOA,MAAM;AACf,CAAC,EACAC,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAT,SAAS,CAACK,YAAY,CAACO,QAAQ,CAACL,GAAG,CAChCK,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAI,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;EACT;EACA,IAAI,EAAAH,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBI,MAAM,MAAK,GAAG,EAAE;IAClC;IACAC,OAAO,CAACT,KAAK,CAAC,qBAAqB,CAAC;EACtC,CAAC,MAAM,IAAI,EAAAK,gBAAA,GAAAL,KAAK,CAACG,QAAQ,cAAAE,gBAAA,uBAAdA,gBAAA,CAAgBG,MAAM,KAAI,GAAG,EAAE;IACxC;IACAC,OAAO,CAACT,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACG,QAAQ,CAACO,IAAI,CAAC;EACrD,CAAC,MAAM,IAAIV,KAAK,CAACW,IAAI,KAAK,aAAa,EAAE;IACvC;IACAF,OAAO,CAACT,KAAK,CAAC,4DAA4D,CAAC;EAC7E;EAEAS,OAAO,CAACT,KAAK,CAAC,YAAY,EAAE;IAC1BY,OAAO,EAAEZ,KAAK,CAACY,OAAO;IACtBJ,MAAM,GAAAF,gBAAA,GAAEN,KAAK,CAACG,QAAQ,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBE,MAAM;IAC9BE,IAAI,GAAAH,gBAAA,GAAEP,KAAK,CAACG,QAAQ,cAAAI,gBAAA,uBAAdA,gBAAA,CAAgBG,IAAI;IAC1BC,IAAI,EAAEX,KAAK,CAACW;EACd,CAAC,CAAC;EAEF,OAAOV,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}