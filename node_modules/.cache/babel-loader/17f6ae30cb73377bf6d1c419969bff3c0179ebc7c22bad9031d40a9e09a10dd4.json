{"ast":null,"code":"// Filter items based on filter state\nexport const filterItems=(items,filters)=>{return items.filter(item=>{// Search by shk (exact match or partial)\nif(filters.search&&!item.shk.toLowerCase().includes(filters.search.toLowerCase())){return false;}// Filter by name (partial match)\nif(filters.name&&!item.name.toLowerCase().includes(filters.name.toLowerCase())){return false;}// Filter by wr_name (partial match, handle null values)\nif(filters.wr_name){if(!item.wr_name||!item.wr_name.toLowerCase().includes(filters.wr_name.toLowerCase())){return false;}}// Filter by condition (exact match)\nif(filters.condition&&item.condition!==filters.condition){return false;}// Filter by ispolnitel (partial match)\nif(filters.ispolnitel&&!item.ispolnitel.toLowerCase().includes(filters.ispolnitel.toLowerCase())){return false;}// Filter by placement status\nif(filters.placementStatus==='placed'){// Размещенные: есть значения в wr_shk И wr_name\nif(!item.wr_shk||!item.wr_name){return false;}}else if(filters.placementStatus==='not_placed'){// Неразмещенные: нет значения в wr_shk ИЛИ wr_name\nif(item.wr_shk&&item.wr_name){return false;}}// Если 'all', то не фильтруем по размещению\n// Filter by date range\nif(filters.dateFrom||filters.dateTo){const itemDate=new Date(item.date);if(filters.dateFrom){const fromDate=new Date(filters.dateFrom);if(itemDate<fromDate){return false;}}if(filters.dateTo){const toDate=new Date(filters.dateTo);// Add one day to include the entire end date\ntoDate.setDate(toDate.getDate()+1);if(itemDate>=toDate){return false;}}}return true;});};// Get unique values for filter options\nexport const getUniqueConditions=items=>{const conditions=items.map(item=>item.condition);return Array.from(new Set(conditions)).sort();};// Get unique ispolnitels for filter options\nexport const getUniqueIspolnitels=items=>{const ispolnitels=items.map(item=>item.ispolnitel);return Array.from(new Set(ispolnitels)).sort();};// Get placement statistics\nexport const getPlacementStats=items=>{const placed=items.filter(item=>item.wr_shk&&item.wr_name).length;const notPlaced=items.length-placed;return{total:items.length,placed,notPlaced};};// Check if any filters are active\nexport const hasActiveFilters=filters=>{return!!(filters.search||filters.name||filters.wr_name||filters.condition||filters.ispolnitel||filters.placementStatus!=='all'||filters.dateFrom||filters.dateTo);};// Reset all filters to empty state\nexport const resetFilters=()=>({search:'',name:'',wr_name:'',condition:'',ispolnitel:'',placementStatus:'all',dateFrom:'',dateTo:''});","map":{"version":3,"names":["filterItems","items","filters","filter","item","search","shk","toLowerCase","includes","name","wr_name","condition","ispolnitel","placementStatus","wr_shk","dateFrom","dateTo","itemDate","Date","date","fromDate","toDate","setDate","getDate","getUniqueConditions","conditions","map","Array","from","Set","sort","getUniqueIspolnitels","ispolnitels","getPlacementStats","placed","length","notPlaced","total","hasActiveFilters","resetFilters"],"sources":["D:/work/komus/3pl-site/src/features/inventory-table/lib/filterUtils.ts"],"sourcesContent":["import { PlacedItemDto, FilterState } from '../model/types';\n\n// Filter items based on filter state\nexport const filterItems = (items: PlacedItemDto[], filters: FilterState): PlacedItemDto[] => {\n  return items.filter((item) => {\n    // Search by shk (exact match or partial)\n    if (filters.search && !item.shk.toLowerCase().includes(filters.search.toLowerCase())) {\n      return false;\n    }\n\n    // Filter by name (partial match)\n    if (filters.name && !item.name.toLowerCase().includes(filters.name.toLowerCase())) {\n      return false;\n    }\n\n    // Filter by wr_name (partial match, handle null values)\n    if (filters.wr_name) {\n      if (!item.wr_name || !item.wr_name.toLowerCase().includes(filters.wr_name.toLowerCase())) {\n        return false;\n      }\n    }\n\n    // Filter by condition (exact match)\n    if (filters.condition && item.condition !== filters.condition) {\n      return false;\n    }\n\n    // Filter by ispolnitel (partial match)\n    if (filters.ispolnitel && !item.ispolnitel.toLowerCase().includes(filters.ispolnitel.toLowerCase())) {\n      return false;\n    }\n\n    // Filter by placement status\n    if (filters.placementStatus === 'placed') {\n      // Размещенные: есть значения в wr_shk И wr_name\n      if (!item.wr_shk || !item.wr_name) {\n        return false;\n      }\n    } else if (filters.placementStatus === 'not_placed') {\n      // Неразмещенные: нет значения в wr_shk ИЛИ wr_name\n      if (item.wr_shk && item.wr_name) {\n        return false;\n      }\n    }\n    // Если 'all', то не фильтруем по размещению\n\n    // Filter by date range\n    if (filters.dateFrom || filters.dateTo) {\n      const itemDate = new Date(item.date);\n      \n      if (filters.dateFrom) {\n        const fromDate = new Date(filters.dateFrom);\n        if (itemDate < fromDate) {\n          return false;\n        }\n      }\n      \n      if (filters.dateTo) {\n        const toDate = new Date(filters.dateTo);\n        // Add one day to include the entire end date\n        toDate.setDate(toDate.getDate() + 1);\n        if (itemDate >= toDate) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  });\n};\n\n// Get unique values for filter options\nexport const getUniqueConditions = (items: PlacedItemDto[]): string[] => {\n  const conditions = items.map(item => item.condition);\n  return Array.from(new Set(conditions)).sort();\n};\n\n// Get unique ispolnitels for filter options\nexport const getUniqueIspolnitels = (items: PlacedItemDto[]): string[] => {\n  const ispolnitels = items.map(item => item.ispolnitel);\n  return Array.from(new Set(ispolnitels)).sort();\n};\n\n// Get placement statistics\nexport const getPlacementStats = (items: PlacedItemDto[]) => {\n  const placed = items.filter(item => item.wr_shk && item.wr_name).length;\n  const notPlaced = items.length - placed;\n  \n  return {\n    total: items.length,\n    placed,\n    notPlaced,\n  };\n};\n\n// Check if any filters are active\nexport const hasActiveFilters = (filters: FilterState): boolean => {\n  return !!(\n    filters.search || \n    filters.name || \n    filters.wr_name || \n    filters.condition || \n    filters.ispolnitel ||\n    filters.placementStatus !== 'all' ||\n    filters.dateFrom ||\n    filters.dateTo\n  );\n};\n\n// Reset all filters to empty state\nexport const resetFilters = (): FilterState => ({\n  search: '',\n  name: '',\n  wr_name: '',\n  condition: '',\n  ispolnitel: '',\n  placementStatus: 'all',\n  dateFrom: '',\n  dateTo: '',\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}