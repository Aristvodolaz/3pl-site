{"ast":null,"code":"// Filter items based on filter state\nexport const filterItems = (items, filters) => {\n  return items.filter(item => {\n    // Search by shk (exact match or partial)\n    if (filters.search && !item.shk.toLowerCase().includes(filters.search.toLowerCase())) {\n      return false;\n    }\n\n    // Filter by name (partial match)\n    if (filters.name && !item.name.toLowerCase().includes(filters.name.toLowerCase())) {\n      return false;\n    }\n\n    // Filter by wr_name (partial match, handle null values)\n    if (filters.wr_name) {\n      if (!item.wr_name || !item.wr_name.toLowerCase().includes(filters.wr_name.toLowerCase())) {\n        return false;\n      }\n    }\n\n    // Filter by condition (exact match)\n    if (filters.condition && item.condition !== filters.condition) {\n      return false;\n    }\n\n    // Filter by ispolnitel (partial match)\n    if (filters.ispolnitel && !item.ispolnitel.toLowerCase().includes(filters.ispolnitel.toLowerCase())) {\n      return false;\n    }\n\n    // Filter by placement status\n    if (filters.placementStatus === 'placed') {\n      // Размещенные: есть значения в wr_shk И wr_name\n      if (!item.wr_shk || !item.wr_name) {\n        return false;\n      }\n    } else if (filters.placementStatus === 'not_placed') {\n      // Неразмещенные: нет значения в wr_shk ИЛИ wr_name\n      if (item.wr_shk && item.wr_name) {\n        return false;\n      }\n    }\n    // Если 'all', то не фильтруем по размещению\n\n    return true;\n  });\n};\n\n// Get unique values for filter options\nexport const getUniqueConditions = items => {\n  const conditions = items.map(item => item.condition);\n  return Array.from(new Set(conditions)).sort();\n};\n\n// Get unique ispolnitels for filter options\nexport const getUniqueIspolnitels = items => {\n  const ispolnitels = items.map(item => item.ispolnitel);\n  return Array.from(new Set(ispolnitels)).sort();\n};\n\n// Get placement statistics\nexport const getPlacementStats = items => {\n  const placed = items.filter(item => item.wr_shk && item.wr_name).length;\n  const notPlaced = items.length - placed;\n  return {\n    total: items.length,\n    placed,\n    notPlaced\n  };\n};\n\n// Check if any filters are active\nexport const hasActiveFilters = filters => {\n  return !!(filters.search || filters.name || filters.wr_name || filters.condition || filters.ispolnitel || filters.placementStatus !== 'all');\n};\n\n// Reset all filters to empty state\nexport const resetFilters = () => ({\n  search: '',\n  name: '',\n  wr_name: '',\n  condition: '',\n  ispolnitel: '',\n  placementStatus: 'all'\n});","map":{"version":3,"names":["filterItems","items","filters","filter","item","search","shk","toLowerCase","includes","name","wr_name","condition","ispolnitel","placementStatus","wr_shk","getUniqueConditions","conditions","map","Array","from","Set","sort","getUniqueIspolnitels","ispolnitels","getPlacementStats","placed","length","notPlaced","total","hasActiveFilters","resetFilters"],"sources":["D:/work/komus/3pl-site/src/features/inventory-table/lib/filterUtils.ts"],"sourcesContent":["import { PlacedItemDto, FilterState } from '../model/types';\n\n// Filter items based on filter state\nexport const filterItems = (items: PlacedItemDto[], filters: FilterState): PlacedItemDto[] => {\n  return items.filter((item) => {\n    // Search by shk (exact match or partial)\n    if (filters.search && !item.shk.toLowerCase().includes(filters.search.toLowerCase())) {\n      return false;\n    }\n\n    // Filter by name (partial match)\n    if (filters.name && !item.name.toLowerCase().includes(filters.name.toLowerCase())) {\n      return false;\n    }\n\n    // Filter by wr_name (partial match, handle null values)\n    if (filters.wr_name) {\n      if (!item.wr_name || !item.wr_name.toLowerCase().includes(filters.wr_name.toLowerCase())) {\n        return false;\n      }\n    }\n\n    // Filter by condition (exact match)\n    if (filters.condition && item.condition !== filters.condition) {\n      return false;\n    }\n\n    // Filter by ispolnitel (partial match)\n    if (filters.ispolnitel && !item.ispolnitel.toLowerCase().includes(filters.ispolnitel.toLowerCase())) {\n      return false;\n    }\n\n    // Filter by placement status\n    if (filters.placementStatus === 'placed') {\n      // Размещенные: есть значения в wr_shk И wr_name\n      if (!item.wr_shk || !item.wr_name) {\n        return false;\n      }\n    } else if (filters.placementStatus === 'not_placed') {\n      // Неразмещенные: нет значения в wr_shk ИЛИ wr_name\n      if (item.wr_shk && item.wr_name) {\n        return false;\n      }\n    }\n    // Если 'all', то не фильтруем по размещению\n\n    return true;\n  });\n};\n\n// Get unique values for filter options\nexport const getUniqueConditions = (items: PlacedItemDto[]): string[] => {\n  const conditions = items.map(item => item.condition);\n  return Array.from(new Set(conditions)).sort();\n};\n\n// Get unique ispolnitels for filter options\nexport const getUniqueIspolnitels = (items: PlacedItemDto[]): string[] => {\n  const ispolnitels = items.map(item => item.ispolnitel);\n  return Array.from(new Set(ispolnitels)).sort();\n};\n\n// Get placement statistics\nexport const getPlacementStats = (items: PlacedItemDto[]) => {\n  const placed = items.filter(item => item.wr_shk && item.wr_name).length;\n  const notPlaced = items.length - placed;\n  \n  return {\n    total: items.length,\n    placed,\n    notPlaced,\n  };\n};\n\n// Check if any filters are active\nexport const hasActiveFilters = (filters: FilterState): boolean => {\n  return !!(\n    filters.search || \n    filters.name || \n    filters.wr_name || \n    filters.condition || \n    filters.ispolnitel ||\n    filters.placementStatus !== 'all'\n  );\n};\n\n// Reset all filters to empty state\nexport const resetFilters = (): FilterState => ({\n  search: '',\n  name: '',\n  wr_name: '',\n  condition: '',\n  ispolnitel: '',\n  placementStatus: 'all',\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}