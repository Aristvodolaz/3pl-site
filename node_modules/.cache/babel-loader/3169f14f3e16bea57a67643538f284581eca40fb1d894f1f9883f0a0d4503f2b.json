{"ast":null,"code":"import _objectSpread from\"D:/work/komus/3pl-site/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect,useMemo}from'react';import{inventoryApi}from'../../../shared/api/inventory';import{filterItems,resetFilters}from'../lib/filterUtils';import{sortItems,resetSort}from'../lib/sortUtils';import{getPaginatedData,updatePaginationForNewData,resetPagination}from'../lib/paginationUtils';import{PAGINATION}from'../../../shared/config/constants';// Main hook for inventory table management\nexport const useInventoryTable=()=>{const[data,setData]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[filters,setFilters]=useState(resetFilters());const[sort,setSort]=useState(resetSort());const[pagination,setPagination]=useState(resetPagination(PAGINATION.DEFAULT_PAGE_SIZE));// Load data from API\nconst loadData=async()=>{setLoading(true);setError(null);try{const response=await inventoryApi.getPlacedItems();if(response.success){setData(response.value.items);}else{throw new Error(\"API Error: \".concat(response.errorCode));}}catch(err){const errorMessage=err instanceof Error?err.message:'Неизвестная ошибка';setError(errorMessage);console.error('Error loading inventory data:',err);}finally{setLoading(false);}};// Load data on component mount\nuseEffect(()=>{loadData();},[]);// Calculate filtered and sorted data\nconst filteredData=useMemo(()=>{let result=filterItems(data,filters);result=sortItems(result,sort);return result;},[data,filters,sort]);// Update pagination when filtered data changes\nuseEffect(()=>{setPagination(prev=>updatePaginationForNewData(prev,filteredData.length));},[filteredData.length]);// Calculate paginated data\nconst paginatedData=useMemo(()=>{return getPaginatedData(filteredData,pagination);},[filteredData,pagination]);// Update filters\nconst updateFilters=newFilters=>{setFilters(prev=>_objectSpread(_objectSpread({},prev),newFilters));};// Reset all filters\nconst handleResetFilters=()=>{setFilters(resetFilters());setSort(resetSort());setPagination(resetPagination(pagination.pageSize));};// Update sort\nconst updateSort=newSort=>{setSort(newSort);};// Update pagination\nconst updatePagination=newPagination=>{setPagination(prev=>_objectSpread(_objectSpread({},prev),newPagination));};// Go to specific page\nconst goToPage=page=>{setPagination(prev=>_objectSpread(_objectSpread({},prev),{},{currentPage:page}));};// Change page size\nconst changePageSize=pageSize=>{setPagination(prev=>_objectSpread(_objectSpread({},prev),{},{pageSize,currentPage:1// Reset to first page when changing page size\n}));};return{// Data\ndata,filteredData,paginatedData,// State\nloading,error,filters,sort,pagination,// Actions\nloadData,updateFilters,handleResetFilters,updateSort,updatePagination,goToPage,changePageSize};};// Hook for managing dark mode\nexport const useDarkMode=()=>{const[isDark,setIsDark]=useState(()=>{// Check localStorage or system preference\nif(typeof window!=='undefined'){const stored=localStorage.getItem('darkMode');if(stored){return stored==='true';}return window.matchMedia('(prefers-color-scheme: dark)').matches;}return false;});useEffect(()=>{if(typeof window!=='undefined'){localStorage.setItem('darkMode',isDark.toString());if(isDark){document.documentElement.classList.add('dark');}else{document.documentElement.classList.remove('dark');}}},[isDark]);const toggleDarkMode=()=>{setIsDark(prev=>!prev);};return{isDark,toggleDarkMode};};","map":{"version":3,"names":["useState","useEffect","useMemo","inventoryApi","filterItems","resetFilters","sortItems","resetSort","getPaginatedData","updatePaginationForNewData","resetPagination","PAGINATION","useInventoryTable","data","setData","loading","setLoading","error","setError","filters","setFilters","sort","setSort","pagination","setPagination","DEFAULT_PAGE_SIZE","loadData","response","getPlacedItems","success","value","items","Error","concat","errorCode","err","errorMessage","message","console","filteredData","result","prev","length","paginatedData","updateFilters","newFilters","_objectSpread","handleResetFilters","pageSize","updateSort","newSort","updatePagination","newPagination","goToPage","page","currentPage","changePageSize","useDarkMode","isDark","setIsDark","window","stored","localStorage","getItem","matchMedia","matches","setItem","toString","document","documentElement","classList","add","remove","toggleDarkMode"],"sources":["D:/work/komus/3pl-site/src/features/inventory-table/model/hooks.ts"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react';\r\nimport { PlacedItemDto, FilterState, SortState, PaginationState } from './types';\r\nimport { inventoryApi } from '../../../shared/api/inventory';\r\nimport { filterItems, resetFilters } from '../lib/filterUtils';\r\nimport { sortItems, resetSort } from '../lib/sortUtils';\r\nimport { getPaginatedData, updatePaginationForNewData, resetPagination } from '../lib/paginationUtils';\r\nimport { PAGINATION } from '../../../shared/config/constants';\r\n\r\n// Main hook for inventory table management\r\nexport const useInventoryTable = () => {\r\n  const [data, setData] = useState<PlacedItemDto[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  const [filters, setFilters] = useState<FilterState>(resetFilters());\r\n  const [sort, setSort] = useState<SortState>(resetSort());\r\n  const [pagination, setPagination] = useState<PaginationState>(\r\n    resetPagination(PAGINATION.DEFAULT_PAGE_SIZE)\r\n  );\r\n\r\n  // Load data from API\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await inventoryApi.getPlacedItems();\r\n      \r\n      if (response.success) {\r\n        setData(response.value.items);\r\n      } else {\r\n        throw new Error(`API Error: ${response.errorCode}`);\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Неизвестная ошибка';\r\n      setError(errorMessage);\r\n      console.error('Error loading inventory data:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Load data on component mount\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  // Calculate filtered and sorted data\r\n  const filteredData = useMemo(() => {\r\n    let result = filterItems(data, filters);\r\n    result = sortItems(result, sort);\r\n    return result;\r\n  }, [data, filters, sort]);\r\n\r\n  // Update pagination when filtered data changes\r\n  useEffect(() => {\r\n    setPagination(prev => updatePaginationForNewData(prev, filteredData.length));\r\n  }, [filteredData.length]);\r\n\r\n  // Calculate paginated data\r\n  const paginatedData = useMemo(() => {\r\n    return getPaginatedData(filteredData, pagination);\r\n  }, [filteredData, pagination]);\r\n\r\n  // Update filters\r\n  const updateFilters = (newFilters: Partial<FilterState>) => {\r\n    setFilters(prev => ({ ...prev, ...newFilters }));\r\n  };\r\n\r\n  // Reset all filters\r\n  const handleResetFilters = () => {\r\n    setFilters(resetFilters());\r\n    setSort(resetSort());\r\n    setPagination(resetPagination(pagination.pageSize));\r\n  };\r\n\r\n  // Update sort\r\n  const updateSort = (newSort: SortState) => {\r\n    setSort(newSort);\r\n  };\r\n\r\n  // Update pagination\r\n  const updatePagination = (newPagination: Partial<PaginationState>) => {\r\n    setPagination(prev => ({ ...prev, ...newPagination }));\r\n  };\r\n\r\n  // Go to specific page\r\n  const goToPage = (page: number) => {\r\n    setPagination(prev => ({ ...prev, currentPage: page }));\r\n  };\r\n\r\n  // Change page size\r\n  const changePageSize = (pageSize: number) => {\r\n    setPagination(prev => ({\r\n      ...prev,\r\n      pageSize,\r\n      currentPage: 1, // Reset to first page when changing page size\r\n    }));\r\n  };\r\n\r\n  return {\r\n    // Data\r\n    data,\r\n    filteredData,\r\n    paginatedData,\r\n    \r\n    // State\r\n    loading,\r\n    error,\r\n    filters,\r\n    sort,\r\n    pagination,\r\n    \r\n    // Actions\r\n    loadData,\r\n    updateFilters,\r\n    handleResetFilters,\r\n    updateSort,\r\n    updatePagination,\r\n    goToPage,\r\n    changePageSize,\r\n  };\r\n};\r\n\r\n// Hook for managing dark mode\r\nexport const useDarkMode = () => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    // Check localStorage or system preference\r\n    if (typeof window !== 'undefined') {\r\n      const stored = localStorage.getItem('darkMode');\r\n      if (stored) {\r\n        return stored === 'true';\r\n      }\r\n      return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      localStorage.setItem('darkMode', isDark.toString());\r\n      \r\n      if (isDark) {\r\n        document.documentElement.classList.add('dark');\r\n      } else {\r\n        document.documentElement.classList.remove('dark');\r\n      }\r\n    }\r\n  }, [isDark]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDark(prev => !prev);\r\n  };\r\n\r\n  return { isDark, toggleDarkMode };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}